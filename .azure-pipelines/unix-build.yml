# Script for building CCTBX on linux and macOS
#
# Variables:
#   PYTHON_VERSION: py27, py36
#   OS: linux-64, osx-64

steps:

- checkout: self
  path: ./modules/dials

- script: |
    echo I am here:
    pwd
    echo This is what lives here:
    ls -la
    ls -la *
  displayName: Some basic scripting
  workingDirectory: $(Pipeline.Workspace)

- script: |
    python modules/dials/installer/bootstrap.py update
  displayName: Update sources
  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo I am here:
    pwd
    echo This is what lives here:
    ls -la
    ls -la *
  displayName: Some basic scripting
  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo Installing with python version $(PYTHON_VERSION)
    python modules/dials/installer/bootstrap.py base --python $(PYTHON_VERSION)
  displayName: Installing python $(PYTHON_VERSION) base environment
  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo I am here:
    pwd
    echo This is what lives here:
    ls -la
    ls -la *
  displayName: Some basic scripting
  workingDirectory: $(Pipeline.Workspace)

#- script: |
#    python modules/dials/installer/bootstrap.py build
#  displayName: Build
#  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo I am here:
    pwd
    echo This is what lives here:
    ls -la
    ls -la *
  displayName: Some basic scripting
  workingDirectory: $(Pipeline.Workspace)

#- script: |
#    python modules/dials/installer/bootstrap.py tests
#  displayName: Run tests
#  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo I am here:
    pwd
    echo This is what lives here:
    ls -la
    ls -la *
  displayName: Some basic scripting
  workingDirectory: $(Pipeline.Workspace)

- script: |
    echo Preparing cache
    rm -rf modules/dials
    for repository in cctbx_project dxtbx; do
      if [ -e modules/${repository}/.git ]; then
        echo Cleaning ${repository} repository
        cd modules/${repository}
        git reset --hard HEAD
        git clean -dffxq
        cd ../..
      fi
    done
    tar cvf cache.tar modules
    ls -la
  displayName: Preparing cache
  workingDirectory: $(Pipeline.Workspace)
  
