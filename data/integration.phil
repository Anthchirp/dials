integration
  .help = "Parameters used in the integration"
{
  algorithm = sum2d *sum3d sum_rs fit_2d fit_3d fit_rs
    .help = "The integration algorithm to use."
    .type = choice

  shoebox
    .help = "Parameters used in the integration shoebox"
  {
    n_sigma = 3
      .help = "The number of standard deviations of the beam divergence and the"
              "mosaicity to use for the bounding box size."
      .type = float
      
    kernel_size = 3 3
      .help = "The size of the local area around the spot in which"
              "to calculate the mean and variance. The kernel is"
              "given as a box of size (2 * nx + 1, 2 * ny + 1) centred"
              "at the pixel."
      .type = ints(size=2)

    sigma_background = 6
      .help = "The number of standard deviations of the coefficient of"
              "variation (variance / mean) in the local area below"
              "which the pixel will be classified as background."
      .type = float

    sigma_strong = 3
      .help = "The number of standard deviations above the mean in the"
              "local area above which the pixel will be classified as"
              "strong."
      .type = float      
  }
   
  filter
    .help = "Parameters for filtering reflections"
  {
    by_volume = True
      .help = "Filter the reflections by the bounding box volume. Only"
              "integrate those reflections with a bounding box volume"
              "below a threshold calculated from the histogram of volumes"
      .type = bool
  }
   
  background
    .help = "Parameters used in the background subtraction algorithm."
  {
    algorithm = none *xds fable flat inclined esmeralda
        .help = "The background subtraction algorithm."
        .type = choice

    min_pixels = 10
      .help = "The minimum number of pixels to use in calculating the"
              "background intensity."
      .type = int

    n_sigma = 3.0
      .help = "The number of standard deviations above the mean pixel intensity"
              "below which the pixel will be classified as background."
      .type = float
  }
  
  reciprocal_space
    .help = "Parameters for the reciprocal space transform."
  {
    grid_size = 4
      .help = "The size of the reciprocal space grid for each reflection."
              "The size is the same in each dimensions"
      .type = int

    n_divisions = 5
      .help = "The number of pixel sub-divisions to use in the transform"
      .type = int
  }
  
  profile
    .help = "Parameters for profile fitting"
  {
    reference_frame_interval = 10
      .help = "The oscillation at which to learn new reference profiles"
      .type = int
    
    reference_signal_threshold = 0.2
      .help = "The threshold to use in reference profile"
      .type = float
  }
}

